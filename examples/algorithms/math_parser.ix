def main {
    print(Parser.eval("2+2*2"));
}

class Parser{
    pub static def eval(expression : String) : int{
        return parseExpr(expression, 0);
    }

    priv static def parseExpr(expression : String, index : int) : int{
            var result : int = parseTerm(expression, index);
            index += countDigits(expression, index);
            while(index < expression.length()){
                var operator : char = expression.charAt(index);
                if(operator == '+' || operator == '-'){
                    index++;
                    var nextFactor : int = parseTerm(expression, index);
                    if(operator == '+'){
                        result += nextFactor;
                    }else{
                        result -= nextFactor;
                    }
                    index += countDigits(expression, index);
                }else{
                    break;
                }
            }
            return result;
        }

    priv static def parseTerm(expression : String, index : int) : int{
        var result : int = parseFactor(expression, index);
        index += countDigits(expression, index);
        while(index < expression.length()){
            var operator : char = expression.charAt(index);
            if(operator == '*' || operator == '/'){
                index++;
                var nextFactor : int = parseFactor(expression, index);
                if(operator == '*'){
                    result *= nextFactor;
                }else{
                    result /= nextFactor;
                }
                index += countDigits(expression, index);
            }else{
                break;
            }
        }
        return result;
    }

    priv static def parseFactor(expression : String, index : int) : int{
        var start : int = index;
        while(index < expression.length() && Character.isDigit(expression.charAt(index))){
            index++;
        }
        return Integer.parseInt(expression.substring(start, index));
    }

    priv static def countDigits(expression : String, index : int) : int {
        var count : int = 0;
        while(index < expression.length() && Character.isDigit(expression.charAt(index))){
            count += 1;
            index += 1;
        }
        return count;
    }
}